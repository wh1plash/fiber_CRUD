version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: Fiber_CRUD
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Fiber_CRUD"]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml' 
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
      
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    container_name: fiber_app
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

volumes:
  grafana_data:
  postgres_data: